dataset = read.csv('Salary_Data.csv')
library(caTools)
set.seed(123)
split = sample.split(dataset$YearsExperience, SplitRatio = 0.66)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Fitting Simple Linear regression
regressor = lm(formula = Salary ~ YearsExperience, data = training_set)
# Predicting
y_pred = predict(regressor, newdata = test_set)
# Vizualization
install.packages('ggplot2')
dataset = read.csv('Salary_Data.csv')
setwd("~/Machine Learning A-Z/Part 2 - Regression/Section 4 - Simple Linear Regression")
dataset = read.csv('Salary_Data.csv')
library(caTools)
set.seed(123)
split = sample.split(dataset$YearsExperience, SplitRatio = 0.66)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Fitting Simple Linear regression
regressor = lm(formula = Salary ~ YearsExperience, data = training_set)
# Predicting
y_pred = predict(regressor, newdata = test_set)
# Vizualization
# install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience,
y = predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
color = 'red') +
geom_line(aes(x = training_set$YearsExperience,
y = predict(regressor, newdata = training_set)),
color = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('Years of experience') +
ylab('Salary')
setwd("~/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression")
setwd("~/Machine Learning A-Z/Part 2 - Regression/Section 5 - Multiple Linear Regression")
dataset = read.csv('50_Startups.csv')
View(dataset)
View(dataset)
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
library(caTools)
set.seed(123)
split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(training_set)
regressor = lm(formula = Profit ~.,
data = training_set)
summary(regressor)
View(training_set)
View(training_set)
y_pred = predict(regressor, test_set)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = training_set)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = training_set)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = dataset)
summary(regressor)
regressor = lm(formula = Profit ~ R.D.Spend,
data = dataset)
summary(regressor)
setwd("~/Machine Learning A-Z/Part 2 - Regression/Section 6 - Polynomial Regression")
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
View(dataset)
View(dataset)
lin_reg = lm(formula = Salary ~ Level,
data = dataset)
lin_reg = lm(formula = Salary ~ .,
data = dataset)
summary(lin_reg)
View(lin_reg)
View(lin_reg)
# Polinomial Linear Regression
dataset$Level2 = dataset$Level^2
View(dataset)
dataset$Level3 = dataset$Level^3
poly_reg = lm(formula = Salary ~ .,
data = dataset)
summary(poly_reg)
# Visualization Linear
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color='red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
color='blue') +
ggtitle('Truth or Bluff (Linear regression)') +
xlab('Level') + ylab('Salary')
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color='red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
color='blue') +
ggtitle('Truth or Bluff (Polynomial regression)') +
xlab('Level') + ylab('Salary')
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
color='red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
color='blue') +
ggtitle('Truth or Bluff (Polynomial regression)') +
xlab('Level') + ylab('Salary')
# Prediction
predict(lin_reg, 6.5)
# Prediction
y_pred = predict(lin_reg, data.frame(Level = 6.5))
y_pred
y_pred = predict(poly_reg, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
y_pred
setwd("~/Machine Learning A-Z/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)")
# Fitting the Regression Model to the dataset
install.packages('e1071')
# Fitting the Regression Model to the dataset
# install.packages('e1071')
library(e1071)
install.packages("e1071")
# Fitting the Regression Model to the dataset
# install.packages('e1071')
library(e1071)
# Fitting the Regression Model to the dataset
install.packages('e1071')
